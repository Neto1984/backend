{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","baseUrl","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","i","Key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","length","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"8MAceA,EAbF,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,KAAKC,EAAsB,EAAtBA,iBACVC,EAAOF,EAAKG,UAChB,qBAAqB,iBAEvB,OACI,6BACA,wBAAIC,UAAY,QACfJ,EAAKK,QACN,4BAAQC,QAAWL,GAAmBC,MCM/BK,EAbM,SAAC,GAAa,IAAZC,EAAW,EAAXA,QACnB,OAAe,OAAZA,EACQ,KAMP,yBAAKJ,UAAY,SAChBI,ICOMC,EAjBA,WAQX,OACI,yBAAKC,MAPW,CAChBC,MAAO,QACPC,UAAW,UACXC,SAAU,KAKV,6BACA,wG,gBCVFC,EAAU,4BA2BD,EAtBA,WACX,IAAMC,EAAUC,IAAMC,IAAIH,GACpBI,EAAc,CAChBC,GAAG,IACHd,QAAS,+BACTe,KAAM,4BACNjB,WAAU,GAEd,OAAOY,EAAQM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAON,OAc1C,EAVI,SAAAO,GAEX,OADgBT,IAAMU,KAAMZ,EAAUW,GACvBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQlC,EALA,SAACJ,EAAKM,GAEjB,OADiBT,IAAMW,IAAI,mBAAoBF,GAChCJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCoF9BK,EAxGF,SAACC,GAAW,IAAD,EACGC,mBAAS,IADZ,mBACfC,EADe,KACTC,EADS,OAEQF,mBAAS,IAFjB,mBAEfG,EAFe,KAENC,EAFM,OAGSJ,oBAAS,GAHlB,mBAGfK,EAHe,KAGLC,EAHK,OAIiBN,mBAAS,MAJ1B,mBAIfO,EAJe,KAIFC,EAJE,KAMtBC,qBAAU,WAEVC,IAEGnB,MAAK,SAAAoB,GACVT,EAASS,QAGH,IAGJ,IA+CIC,EAAcP,EAClBJ,EACAA,EAAMY,QAAO,SAAA3C,GAAI,OAAoB,IAAjBA,EAAKG,aAEzB,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcK,QAAW6B,IAEzB,6BACL,4BAAS/B,QAAW,kBAAK8B,GAAYD,KAArC,OACcA,EAAS,YAAc,QAGhC,4BAEGO,EAAYE,KAAI,SAAC5C,EAAO6C,GAAR,OACjB,kBAAC,EAAD,CAAMC,IAAOD,EAAI7C,KAAQA,EACzBC,iBAAoB,kBA7CG,SAACkB,GAC1B,IACMnB,EAAO+B,EAAMgB,MAAK,SAAAC,GAAC,OAAEA,EAAE7B,KAAOA,KAC9B8B,EAAY,2BAAKjD,GAAN,IAAYG,WAAWH,EAAKG,YAGnDqC,EACQrB,EAAI8B,GACX5B,MAAK,SAAA6B,GACNlB,EAASD,EAAMa,KAAI,SAAA5C,GAAI,OAAEA,EAAKmB,KAAOA,EAAKnB,EAAMkD,SAG/CC,OAAM,SAAAC,GACLd,EAAgB,kBAEhBe,YAAW,WAAKf,EAAgB,QAC9B,QA6B4BgB,CAAmBtD,EAAKmB,WAOxD,0BAAMoC,SAxEY,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CAEjBrD,QAAS4B,EACTb,MAAM,IAAIuC,MAAOC,cACjBzD,UAAW0D,KAAKC,SAAW,GAC3B3C,GAAIY,EAAMgC,OAAS,GAGrBvB,EACQkB,GACPrC,MAAK,SAAA6B,GACVlB,EAASD,EAAMP,OAAO0B,IACtBhB,EAAW,SA2DT,2BAAQ8B,MAAS/B,EAAYgC,SA/BN,SAACT,GACxBtB,EAAWsB,EAAMU,OAAOF,UAgCxB,4BAAQG,KAAO,UAAf,WAEA,kBAAC,EAAD,Q,MC3FFC,IAASC,OACT,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.9489438f.chunk.js","sourcesContent":["import React from 'react'\r\nconst Note = ({note,toggleImportance}) => {\r\n    const label= note.important\r\n    ? 'make not important':'make important'\r\n\r\n    return(\r\n        <div>\r\n        <li className = 'note'>\r\n        {note.content}\r\n        <button onClick = {toggleImportance}>{label}</button>\r\n        </li>\r\n        </div>\r\n    )\r\n}\r\nexport default Note","import React from 'react'\r\n\r\nconst Notification = ({message})=>{\r\n    if(message === null){\r\n        return null\r\n    }\r\n\r\n    \r\n\r\n  return(\r\n        <div className = \"error\"> \r\n        {message} \r\n        </div>\r\n  )\r\n  }\r\nexport default Notification","import React from 'react'\r\nconst Footer = () => {\r\n\r\n    const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italics',\r\n        fontSize: 16\r\n    }\r\n\r\n    return(\r\n        <div style = {footerStyle}>\r\n        <br/>\r\n        <em>Note app, Department of Computer Science, University of Helsinki, 2020</em>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Footer","import axios from 'axios'\r\n\r\nconst baseUrl = 'http://localhost:3002/api'\r\n\r\n\r\n\r\n\r\nconst getAll = ()=>{\r\n    const request = axios.get(baseUrl)\r\n    const nonExisting = {\r\n        id:10000,\r\n        content: 'This note is saved to Server',\r\n        date: '2019-05-30T17:30:31. 098Z',\r\n        important:true,\r\n    }\r\n    return request.then(response => response.data.concat(nonExisting))\r\n    //return request.then(response => response.data)\r\n    }\r\n\r\n    const create = newObject => {\r\n        const request = axios.post( baseUrl , newObject)\r\n        return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id , newObject) =>{\r\n    const request =  axios.put('{baseUrl} / {id}', newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll,create,update}\r\n\r\n","import React, {useState,useEffect}  from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport noteService from './services/notes'\n\nconst  App = (props) => {\n  const [notes,setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll , setShowAll] = useState(true)\n  const [errorMessage,setErrorMessage] = useState(null)\n\n  useEffect(()=> {\n\n  noteService\n    .getAll()\n    .then(initialNotes => {\nsetNotes(initialNotes)\n\n    })\n  } , [])\n\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1,\n    }\n\n    noteService\n    .create(noteObject)\n    .then(returnedNote => {\nsetNotes(notes.concat(returnedNote))\nsetNewNote('')\n })\n\n  }\n\n    \n    const toggleImportanceOf = (id) => {\n      const url = 'http:// localhost:3002/notes/{id} '\n      const note = notes.find(n=>n.id === id)\n      const changedNote= {...note, important:!note.important}\n\n  \nnoteService\n.update(id, changedNote)\n.then(returnedNote => {\nsetNotes(notes.map(note=>note.id !== id ? note: returnedNote))\n})\n\n.catch(error=>{\n  setErrorMessage('{note.content}')\n\n  setTimeout(()=>{setErrorMessage(null)\n  },5000)\n  \n})\n\n    }\n\nconst handleNoteChange = (event) =>{\n  setNewNote(event.target.value)\n}\n\n\nconst notesToShow = showAll\n? notes\n: notes.filter(note=> note.important===true )\n\n  return(\n    <div>\n      <h1>Notes</h1>\n      <Notification message = {errorMessage}/>\n\n      <div>\n < button onClick = {()=> setShowAll(!showAll)} >\n          show{showAll? 'important' : 'all'}\n          </button>\n          </div>\n      <ul>\n\n        {notesToShow.map((note , i) =>\n        <Note Key = {i}  note = {note}\n        toggleImportance = {()=>toggleImportanceOf(note.id)}\n         />\n  )}\n\n</ul>\n\n\n<form onSubmit = {addNote}>\n  <input  value = {newNote}    onChange = {handleNoteChange} />\n\n  <button type = \"submit\"> Save </button> \n  </form>\n  <Footer />\n</div>\n\n  \n\n  )\n  }\n\n        \n\nexport default App\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n  \r\n  \r\n\r\n\r\n\r\nReactDOM.render(\r\n<App /> , \r\ndocument.getElementById('root')\r\n)"],"sourceRoot":""}